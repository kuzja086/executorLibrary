@Глобально
структура результатВыполнения
    пер кодОтвета: Число
    пер описание: Строка    
;

@Глобально
метод добавитьВИндекс(имяКаталогаВыполнения: Строка): результатВыполнения
    пер аргументыГит = новый Массив<Строка>()
    аргументыГит.Добавить("add")
    аргументыГит.Добавить("-A")
    пер результат = выполнитьКомандуГИТ(аргументыГит, имяКаталогаВыполнения)
    
    возврат результат   
;

@Глобально
метод зафиксироватьИзменения(имяКаталогаВыполнения: Строка, текстКоммита: Строка): результатВыполнения
    пер массивФиксации = новый Массив<Строка>()
    массивФиксации.Добавить("commit")
    массивФиксации.Добавить("-m")
    массивФиксации.Добавить(текстКоммита)
    пер результат = выполнитьКомандуГИТ(массивФиксации, имяКаталогаВыполнения)
    
    возврат результат   
;

@Глобально
метод отправитьИзменения(имяКаталогаВыполнения: Строка, привязатьУдаленныйРепо: Булево = Ложь, имяУдаленнойВетки: Строка): результатВыполнения
    пер массивОтправки = новый Массив<Строка>()
    массивОтправки.Добавить("push")
    если привязатьУдаленныйРепо
        массивОтправки.Добавить("--set-upstream")
        массивОтправки.Добавить("origin")
        массивОтправки.Добавить(имяУдаленнойВетки)
    ;  

    пер результат = выполнитьКомандуГИТ(массивОтправки, имяКаталогаВыполнения)
    
    возврат результат   
;

@Глобально
метод склонироватьРепозиторий(адресРепозитория: Строка, имяКаталогаВыполнения: Строка, имяВетки: Строка = ""): результатВыполнения
    пер каталогДляЗагрузки = новый Файл(имяКаталогаВыполнения)
    если не каталогДляЗагрузки.Существует()
        Файлы.СоздатьКаталог(имяКаталогаВыполнения)        
    ;

    пер аргументыГит = новый Массив<Строка>()
    аргументыГит.Добавить("clone")
    аргументыГит.Добавить(адресРепозитория)
    если не имяВетки.Пусто()
        аргументыГит.Добавить("-b")
        аргументыГит.Добавить(имяВетки)
    ;
    аргументыГит.Добавить(".")
        
    пер результат = выполнитьКомандуГИТ(аргументыГит, имяКаталогаВыполнения)

    возврат результат   
;

метод выполнитьКомандуГИТ(массивАргументов: Массив<Строка>, имяКаталогаВыполнения: Строка): результатВыполнения
    пер процессГит = новый ПроцессОс("git", массивАргументов)
    процессГит.Запустить(имяКаталогаВыполнения)
    процессГит.ОжидатьЗавершения(5м)

    пер вывод = процессГит.ПолучитьПотокВывода().ПрочитатьКакСтроку()
    пер кодВозврата = процессГит.ПолучитьКодВозврата()!

    пер результат = новый результатВыполнения()
    результат.кодОтвета = кодВозврата
    результат.описание = вывод

    возврат результат
;